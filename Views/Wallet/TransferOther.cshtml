
<div class="row">
    <div class="col-md-6 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Transfer token to other wallet</h4>
                <div class="form-group">
                    <label for="exampleInputEmail1">From:</label>
                    <input type="text" class="form-control" style="color:black" disabled id="addressFrom" value="@ViewData["address"]" placeholder=". . .">
                </div>
                <div class="form-group">
                    <label for="exampleInputEmail1">To:</label>
                    <input type="text" class="form-control" id="addressTo" placeholder=". . .">
                </div>
                <div class="form-group">
                    <label for="exampleInputEmail1">Password:</label>
                    <input type="text" class="form-control" id="pass" placeholder=". . .">
                </div>

                <a style="display: -webkit-inline-box;" class="btn btn-light" data-toggle="tooltip" data-placement="top" title="Withdraw to project wallet" onclick="Transfer('USDT')">
                    <div id="loading-USDT" style="width:15px;height:15px; display:none" class="spinner-border" role="status">
                    </div> Transfer USDT
                </a>
                <a style="display: -webkit-inline-box;" class="btn btn-light" data-toggle="tooltip" data-placement="top" title="Withdraw to project wallet" onclick="Transfer('USDC')">
                    <div id="loading-USDC" style="width:15px;height:15px; display:none" class="spinner-border" role="status">
                    </div> Transfer USDC
                </a>
                <a style="display: -webkit-inline-box;" class="btn btn-light" data-toggle="tooltip" data-placement="top" title="Withdraw to project wallet" onclick="Transfer('BUSD')">
                    <div id="loading-BUSD" style="width:15px;height:15px; display:none" class="spinner-border" role="status">
                    </div> Transfer BUSD
                </a>

                <a style="display: -webkit-inline-box;" class="btn btn-light" data-toggle="tooltip" data-placement="top" title="Withdraw to project wallet" onclick="Transfer('USDT_TESTNET')">
                    <div id="loading-USDT_TESTNET" style="width:15px;height:15px; display:none" class="spinner-border" role="status">
                    </div> Transfer USDT-TN
                </a>
                @*<button class="btn btn-dark">Cancel</button>*@
            </div>

        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Balance of:  @ViewData["address"]</h4>
                <div class="row">
                    <div class="col-md-12">
                        <div class="table-responsive">
                            <table class="table">
                                <tbody>
                                    <tr>
                                        <td>
                                            <img style="margin-left:5px; height:30px;width:30px" src="https://s2.coinmarketcap.com/static/img/coins/64x64/825.png">
                                        </td>
                                        <td style="color:white;font-weight:700">USDT</td>
                                        <td class="text-right" id="usdt" style="color:white;font-weight:700"> $ 1500 </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <img style="margin-left:5px; height:30px;width:30px" src="https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png">
                                        </td>
                                        <td style="color:white;font-weight:700">USDC</td>
                                        <td class="text-right" id="usdc" style="color:white;font-weight:700"> 800 </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <img style="margin-left:5px; height:30px;width:30px" src="https://s2.coinmarketcap.com/static/img/coins/64x64/4687.png">
                                        </td>
                                        <td style="color:white;font-weight:700">BUSD</td>
                                        <td class="text-right" id="busd" style="color:white;font-weight:700"> 760 </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <img style="margin-left:5px; height:30px;width:30px" src="https://s2.coinmarketcap.com/static/img/coins/64x64/825.png">
                                        </td>
                                        <td style="color:white;font-weight:700">USDT-TN</td>
                                        <td class="text-right" id="usdttn" style="color:white;font-weight:700"> 450 </td>
                                    </tr>

                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
            <div class="card-footer">
                <h4 id="bnb">Bnb: </h4>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Noti</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h4 id="content">
                    AHIHI
                </h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button onclick="viewTX()" style="display: none;" id="viewtx" type="button" class="btn btn-primary">View tx</button>
            </div>
        </div>
    </div>
</div>

<script>
    var txhash = "";

    document.addEventListener("DOMContentLoaded", async function () {
        
        balanceTK();
    });

    async function balanceTK(){
        var ERC20ABI = [
            {
                "constant": true,
                "inputs": [],
                "name": "name",
                "outputs": [
                    {
                        "name": "",
                        "type": "string"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "_spender",
                        "type": "address"
                    },
                    {
                        "name": "_value",
                        "type": "uint256"
                    }
                ],
                "name": "approve",
                "outputs": [
                    {
                        "name": "",
                        "type": "bool"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "totalSupply",
                "outputs": [
                    {
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "_from",
                        "type": "address"
                    },
                    {
                        "name": "_to",
                        "type": "address"
                    },
                    {
                        "name": "_value",
                        "type": "uint256"
                    }
                ],
                "name": "transferFrom",
                "outputs": [
                    {
                        "name": "",
                        "type": "bool"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "decimals",
                "outputs": [
                    {
                        "name": "",
                        "type": "uint8"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "_owner",
                        "type": "address"
                    }
                ],
                "name": "balanceOf",
                "outputs": [
                    {
                        "name": "balance",
                        "type": "uint256"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "symbol",
                "outputs": [
                    {
                        "name": "",
                        "type": "string"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "_to",
                        "type": "address"
                    },
                    {
                        "name": "_value",
                        "type": "uint256"
                    }
                ],
                "name": "transfer",
                "outputs": [
                    {
                        "name": "",
                        "type": "bool"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "_owner",
                        "type": "address"
                    },
                    {
                        "name": "_spender",
                        "type": "address"
                    }
                ],
                "name": "allowance",
                "outputs": [
                    {
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "payable": true,
                "stateMutability": "payable",
                "type": "fallback"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "name": "owner",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "name": "spender",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "name": "value",
                        "type": "uint256"
                    }
                ],
                "name": "Approval",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "name": "from",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "name": "to",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "name": "value",
                        "type": "uint256"
                    }
                ],
                "name": "Transfer",
                "type": "event"
            }
        ];
        var address = `@Html.Raw(ViewData["address"])`;
        //var web3 = new Web3("https://bsc-dataseed1.binance.org/");
        var web3 = new Web3("https://data-seed-prebsc-1-s1.binance.org:8545/");

        var balanceBnb = await web3.eth.getBalance(address);
        document.getElementById("bnb").innerHTML = parseFloat(web3.utils.fromWei(balanceBnb, 'ether')).toFixed(5) + " bnb";


        //const contract = new web3.eth.Contract(ERC20ABI, "0x55d398326f99059ff775485246999027b3197955");
        //var balanceOfEther = await contract.methods.balanceOf(address).call();
        //var _balanceOfEther = web3.utils.fromWei(balanceOfEther, 'ether');
        //if (Number.isInteger(parseFloat(_balanceOfEther))) {
        //    document.getElementById("usdt").textContent = parseFloat(_balanceOfEther).toFixed(0) + " $";
        //}else{
        //    document.getElementById("usdt").textContent = parseFloat(_balanceOfEther).toFixed(3) + " $";
        //}

        //const contract1 = new web3.eth.Contract(ERC20ABI, "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d");
        //var balanceOfEther1 = await contract1.methods.balanceOf(address).call();
        //var _balanceOfEther1 = web3.utils.fromWei(balanceOfEther1, 'ether');
        //if (Number.isInteger(parseFloat(_balanceOfEther1))) {
        //    document.getElementById("usdc").textContent = parseFloat(_balanceOfEther1).toFixed(0) + " $";
        //} else {
        //    document.getElementById("usdc").textContent = parseFloat(_balanceOfEther1).toFixed(3) + " $";
        //}


        //const contract2 = new web3.eth.Contract(ERC20ABI, "0xe9e7cea3dedca5984780bafc599bd69add087d56");
        //var balanceOfEther2 = await contract2.methods.balanceOf(address).call();
        //var _balanceOfEther2 = web3.utils.fromWei(balanceOfEther2, 'ether');
        //if (Number.isInteger(parseFloat(_balanceOfEther2))) {
        //    document.getElementById("busd").textContent = parseFloat(_balanceOfEther2).toFixed(0) + " $";
        //} else {
        //    document.getElementById("busd").textContent = parseFloat(_balanceOfEther2).toFixed(3) + " $";
        //}

        const contract2 = new web3.eth.Contract(ERC20ABI, "0x84791a1e733b8513b02afaf3a54c0020807d70a1");
        var balanceOfEther2 = await contract2.methods.balanceOf(address).call();
        var _balanceOfEther2 = web3.utils.fromWei(balanceOfEther2, 'ether');
        if (Number.isInteger(parseFloat(_balanceOfEther2))) {
            document.getElementById("usdttn").textContent = parseFloat(_balanceOfEther2).toFixed(0) + " $";
        } else {
            document.getElementById("usdttn").textContent = parseFloat(_balanceOfEther2).toFixed(3) + " $";
        }
    }


    function Transfer(tokenname) {

        var myModal = document.getElementById("exampleModal");
        var modal = new bootstrap.Modal(myModal);
        var content = document.getElementById("content");

        var addressFrom = document.getElementById("addressFrom").value;
        var addressTo = document.getElementById("addressTo").value;
        var pass = document.getElementById("pass").value;

        var web3 = new Web3("https://data-seed-prebsc-1-s1.binance.org:8545/");
        var a = web3.utils.checkAddressChecksum(addressTo);
        if (a == true) {
            if (pass.length >= 5) {
                document.getElementById("loading-" + tokenname).style.display = "block";




                var value = 1;

                let param = {
                    'address': addressFrom,
                    'password': pass,
                    'toaddress': addressTo,
                    'value': value,
                    'tokenname': tokenname,
                };
                console.log("param=>", param);
                $.ajax({
                    type: 'POST',
                    url: "@Url.Action("Transferto")",
                    data: param,
                    async: true,
                    success: function (data) {
                        document.getElementById("loading-" + tokenname).style.display = "none";
                        console.log("data=>", data);
                        if (data.success == false) {
                            content.innerHTML = data.message;
                            document.getElementById("viewtx").style.display = "none";
                            modal.show();
                        } else {
                            content.innerHTML = data.data.message;
                            document.getElementById("viewtx").style.display = "block";
                            txhash = data.data.txhash;
                            modal.show();
                            // cap nhat lai so du cac token
                             balanceTK();
                        }
                    }
                });
            }
            else {
                alert("Nhập đủ thông tin!");
            }
        } else {
            alert("sai địa chỉ nhận!");
        }


    }
    function viewTX() {
        var URL = "https://bscscan.com/tx/" + txhash;
        window.open(URL, '_blank');
    }
</script>

<script src="/js/web3.min.js"></script>